@typeparam TItem

<MudPaper Class="pa-3 mb-3" Elevation="0">
    <MudGrid>
        <MudItem xs="12" md="4">
            <MudTextField T="string"
                          @bind-Value="SearchText"
                          Label="Hledat"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Search"
                          DebounceInterval="300"
                          OnDebounceIntervalElapsed="ApplyFilters"/>
        </MudItem>

        <MudItem xs="12" md="8">
            <MudStack Row="true" Justify="Justify.FlexEnd">
                @ChildContent
            </MudStack>
        </MudItem>
    </MudGrid>
</MudPaper>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    [Parameter]
    public EventCallback<string> SearchChanged { get; set; }
    [Parameter]
    public EventCallback FiltersApplied { get; set; }

    private string _searchText = string.Empty;

    public string SearchText
    {
        get => _searchText;
        set
        {
            if (_searchText == value) return;
            _searchText = value;
            SearchChanged.InvokeAsync(value);
        }
    }

    private async Task ApplyFilters()
    {
        await FiltersApplied.InvokeAsync();
    }

    public void Reset()
    {
        SearchText = string.Empty;
    }
}